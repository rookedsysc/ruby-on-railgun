services:
  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: df159357
      POSTGRES_DB: rails-board
    ports:
      - "5432:5432"
    networks:
      - ruby-board

  cm1:
    build:
      context: ./community-service
      dockerfile: Dockerfile
    container_name: cm1
    command: bash -c "bundle exec rails db:migrate && bundle exec rails server -b 0.0.0.0 -p 3000"
    depends_on:
      - db
      - rabbitmq
    environment:
      RAILS_ENV: development
    volumes:
      - .:/app
    networks:
      - ruby-board
    deploy:
      resources:
        # https://docs.docker.com/reference/compose-file/deploy/#resources
        limits: # 제한
          cpus: "1"
          memory: 1g
        reservations: # 메인 OS에서 미리 예약
          cpus: "1"
          memory: 1g

  cm2:
    build:
      context: ./community-service
      dockerfile: Dockerfile
    container_name: cm2
    command: bash -c "bundle exec rails db:migrate && bundle exec rails server -b 0.0.0.0 -p 3000"
    depends_on:
      - db
      - rabbitmq
    environment:
      RAILS_ENV: development
    volumes:
      - .:/app
    networks:
      - ruby-board
    deploy:
      resources:
        # https://docs.docker.com/reference/compose-file/deploy/#resources
        limits: # 제한
          cpus: "1"
          memory: 1g
        reservations: # 메인 OS에서 미리 예약
          cpus: "1"
          memory: 1g

  cm3:
    build:
      context: ./community-service
      dockerfile: Dockerfile
    container_name: cm3
    command: bash -c "bundle exec rails db:migrate && bundle exec rails server -b 0.0.0.0 -p 3000"
    depends_on:
      - db
      - rabbitmq
    environment:
      RAILS_ENV: development
    volumes:
      - .:/app
    networks:
      - ruby-board
    deploy:
      resources:
        # https://docs.docker.com/reference/compose-file/deploy/#resources
        limits: # 제한
          cpus: "1"
          memory: 1g
        reservations: # 메인 OS에서 미리 예약
          cpus: "1"
          memory: 1g

  cm4:
    build:
      context: ./community-service
      dockerfile: Dockerfile
    container_name: cm4
    command: bash -c "bundle exec rails db:migrate && bundle exec rails server -b 0.0.0.0 -p 3000"
    depends_on:
      - db
      - rabbitmq
    environment:
      RAILS_ENV: development
    volumes:
      - .:/app
    networks:
      - ruby-board
    deploy:
      resources:
        # https://docs.docker.com/reference/compose-file/deploy/#resources
        limits: # 제한
          cpus: "1"
          memory: 1g
        reservations: # 메인 OS에서 미리 예약
          cpus: "1"
          memory: 1g

  management-service:
    build:
      context: ./management-service
      dockerfile: Dockerfile
    container_name: management-service
    command: bash -c "bundle exec rails db:migrate && bundle exec rails server -b 0.0.0.0 -p 3000"
    ports:
      - "8081:3000"
    depends_on:
      - db
      - rabbitmq
    environment:
      RAILS_ENV: development
    volumes:
      - .:/app
    networks:
      - ruby-board
    deploy:
      resources:
        # https://docs.docker.com/reference/compose-file/deploy/#resources
        limits: # 제한
          cpus: "1"
          memory: 1g
        reservations: # 메인 OS에서 미리 예약
          cpus: "1"
          memory: 1g

  bad-word-detector-service:
    build:
      context: ./badword-detector
      dockerfile: Dockerfile
    container_name: bad-word-detector-service
    command: bash -c "bundle exec rails db:migrate && bundle exec rails server -b 0.0.0.0 -p 3000"
    ports:
      - "50051:50051"
    depends_on:
      - db
      - rabbitmq
    environment:
      RAILS_ENV: development
    volumes:
      - .:/app
    networks:
      - ruby-board

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # management console
      - "15692:15692" # prometheus metrics
    networks:
      - ruby-board
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - ruby-board
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - ruby-board
    volumes:
      - ./deploy-setting/prometheus.yml:/etc/prometheus/prometheus.yml

  nginx:
    image: nginx:latest
    networks:
      - ruby-board
    ports:
      - 8080:8080
    volumes:
      - ./deploy-setting/nginx.conf:/etc/nginx/nginx.conf

networks:
  ruby-board:
    driver: bridge
